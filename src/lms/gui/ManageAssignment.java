/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lms.gui;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lms.connection.ProvideConnection;

/**
 *
 * @author DELL
 */
public class ManageAssignment extends javax.swing.JFrame {

    /**
     * Creates new form ManageAssignment
     */
    public int tutor_id;

    public ManageAssignment() {
        initComponents();
        setLocation(560, 60);
    }

    public ManageAssignment(int tutor_id) {
        initComponents();
        this.tutor_id = tutor_id;
        setLocation(560, 60);
    }
    File f;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cancelBtn = new javax.swing.JLabel();
        courseCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignmentTxt = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        submissiondateChooser = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        fileTxt = new javax.swing.JTextField();
        filechooseBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        assignmentTbl = new javax.swing.JTable();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        assignmentidTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel1.setText("Manage Assignment");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 13, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, 1200, 10));

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/cancel.png"))); // NOI18N
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });
        getContentPane().add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1156, 13, -1, -1));

        courseCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        courseCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        getContentPane().add(courseCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 133, 300, 35));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel4.setText("Add File");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 406, -1, 35));

        jPanel2.setBackground(new java.awt.Color(56, 69, 173));

        addBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/add.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/updating.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/delete.png"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/reset.png"))); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(964, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel5.setText("Assignment");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 186, 92, 35));

        assignmentTxt.setColumns(20);
        assignmentTxt.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        assignmentTxt.setRows(5);
        jScrollPane1.setViewportView(assignmentTxt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 186, 300, 200));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel6.setText("Submission Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(453, 133, 146, 35));

        submissiondateChooser.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        getContentPane().add(submissiondateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 133, 297, 35));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel7.setText("Course Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 133, -1, 35));

        fileTxt.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        fileTxt.setText("(If any)");
        getContentPane().add(fileTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 406, 300, 35));

        filechooseBtn.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        filechooseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/addfile.png"))); // NOI18N
        filechooseBtn.setText("Choose File");
        filechooseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filechooseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(filechooseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 448, -1, 35));

        assignmentTbl.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        assignmentTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Assignment Id", "Course Name", "Assignment", "File", "Date", "Submission Date", "Status"
            }
        ));
        assignmentTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignmentTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(assignmentTbl);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 563, 1176, 324));

        dateChooser.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        getContentPane().add(dateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 80, 297, 35));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel3.setText("Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(453, 80, 92, 35));

        assignmentidTxt.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        assignmentidTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignmentidTxtMouseClicked(evt);
            }
        });
        assignmentidTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentidTxtActionPerformed(evt);
            }
        });
        getContentPane().add(assignmentidTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 80, 300, 35));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel2.setText("Assignment Id");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 86, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel8.setText("Search Assignment");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 508, -1, 35));

        jTextField1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jTextField1.setText("Id or Course name");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 508, 250, 35));

        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/loupe.png"))); // NOI18N
        jButton1.setText("Search");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(777, 506, -1, -1));

        jPanel1.setBackground(new java.awt.Color(249, 244, 241));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_cancelBtnMouseClicked

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        // TODO add your handling code here:
        String assignment_id = assignmentidTxt.getText();
        String course_name = (String) courseCombo.getSelectedItem();
        String assignment = assignmentTxt.getText();
        String file = fileTxt.getText();
        Date date = dateChooser.getDate();
        Date submission_date = submissiondateChooser.getDate();
        String status = "pending";
        if (file.equals("(If any)")) {
            file = "none";
        }
        // Validation checks
        if (assignment_id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "You must enter a valid assignment ID.");
        } else if (course_name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "You must choose a valid course.");
        } else if (assignment.isEmpty()) {
            JOptionPane.showMessageDialog(null, "You must enter an assignment.");
        } else if (date == null) {
            JOptionPane.showMessageDialog(null, "You must choose a valid date.");
        } else if (submission_date == null) {
            JOptionPane.showMessageDialog(null, "You must choose a valid submission date.");
        } else if (submission_date.before(new Date())) {
            JOptionPane.showMessageDialog(null, "Submission date cannot be in the past.");
        } else {
            try {
                Connection con = ProvideConnection.getConnection();
                // Proceed with insertion
                String insertQuery = "INSERT INTO assignment (assignment_id, course_name, assignment, added_file, date, submission_date, status) VALUES (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement insertStmt = con.prepareStatement(insertQuery);
                insertStmt.setInt(1, Integer.parseInt(assignment_id));
                insertStmt.setString(2, course_name);
                insertStmt.setString(3, assignment);
                insertStmt.setString(4, file);
                insertStmt.setDate(5, new java.sql.Date(date.getTime()));
                insertStmt.setDate(6, new java.sql.Date(submission_date.getTime()));
                insertStmt.setString(7, status);

                int rowsAffected = insertStmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Assignment Added Successfully.");
                    setVisible(false);
                    new ManageAssignment(tutor_id).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to add Assignment.");
                }

                insertStmt.close();
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
                ex.printStackTrace(); // Print stack trace for debugging
            }
        }

    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        //        // TODO add your handling code here:
        String assignment_id = assignmentidTxt.getText();
        String course_name = (String) courseCombo.getSelectedItem();
        String assignment = assignmentTxt.getText();
        String file = fileTxt.getText().equals("If any") ? "none" : fileTxt.getText();
        Date date = dateChooser.getDate();
        Date submission_date = submissiondateChooser.getDate();
        String status = "pending"; // assuming default status as "pending"

        if (course_name.equals("None")) {
            JOptionPane.showMessageDialog(null, "Course field is required.");
        } else if (assignment.equals("")) {
            JOptionPane.showMessageDialog(null, "Assignment field is required.");
        } else if (date == null) {
            JOptionPane.showMessageDialog(null, "Date field is required.");
        } else if (submission_date == null) {
            JOptionPane.showMessageDialog(null, "Submission Date field is required.");
        } else if (submission_date.before(new Date())) {
            JOptionPane.showMessageDialog(null, "Submission Date cannot be before today's date.");
        } else {
            try {
                Connection con = ProvideConnection.getConnection();
                PreparedStatement ps = con.prepareStatement("UPDATE assignment SET course_name=?, assignment=?, added_file=?, date=?, submission_date=?, status=? WHERE assignment_id=?");
                ps.setString(1, course_name);
                ps.setString(2, assignment);
                ps.setString(3, file);
                ps.setDate(4, new java.sql.Date(date.getTime()));
                ps.setDate(5, new java.sql.Date(submission_date.getTime()));
                ps.setString(6, status);
                ps.setInt(7, Integer.parseInt(assignment_id));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Assignment Updated Successfully.");

                // Refresh the table data
                DefaultTableModel model = (DefaultTableModel) assignmentTbl.getModel();
                model.setRowCount(0); // Clear the table

                String query = "SELECT * FROM assignment";
                PreparedStatement stmt = con.prepareStatement(query);
                ResultSet rs = stmt.executeQuery();

                while (rs.next()) {
                    int id = rs.getInt("assignment_id");
                    String courseName = rs.getString("course_name");
                    String assignmentDetail = rs.getString("assignment");
                    String addedFile = rs.getString("added_file");
                    Date assignmentDate = rs.getDate("date");
                    Date submissionDate = rs.getDate("submission_date");
                    String assignmentStatus = rs.getString("status");
                    model.addRow(new Object[]{id, courseName, assignmentDetail, addedFile, assignmentDate, submissionDate, assignmentStatus});
                }

                rs.close();
                stmt.close();
                con.close();

                // Clear form fields
                assignmentidTxt.setText("");
                courseCombo.setSelectedItem("None");
                assignmentTxt.setText("");
                fileTxt.setText("");
                dateChooser.setDate(null);
                submissiondateChooser.setDate(null);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "SQL Error: " + e.getMessage());
                e.printStackTrace(); // Print stack trace for debugging
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here: 
        String assignmentId = assignmentidTxt.getText();
        int confirmation = JOptionPane.showConfirmDialog(null, "Do you want to delete this assignment?", "Select", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                Connection con = ProvideConnection.getConnection();
                PreparedStatement ps = con.prepareStatement("DELETE FROM assignment WHERE assignment_id = ?");
                ps.setString(1, assignmentId);
                int rowsDeleted = ps.executeUpdate();

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Assignment deleted successfully.");
                    // Clear form fields
                    assignmentidTxt.setText("");
                    List<String> courseNames = getCourseNamesByTutorId(tutor_id);
        for (String courseName : courseNames) {
            courseCombo.addItem(courseName);
        }
                    courseCombo.setSelectedItem("None");
                    assignmentTxt.setText("");
                    fileTxt.setText("");
                    dateChooser.setDate(null);
                    submissiondateChooser.setDate(null);

                    // Refresh the table data
                    DefaultTableModel model = (DefaultTableModel) assignmentTbl.getModel();
                    model.setRowCount(0); // Clear the table

                    String query = "SELECT * FROM assignment";
                    PreparedStatement stmt = con.prepareStatement(query);
                    ResultSet rs = stmt.executeQuery();

                    while (rs.next()) {
                        int id = rs.getInt("assignment_id");
                        String courseName = rs.getString("course_name");
                        String assignment = rs.getString("assignment");
                        String file = rs.getString("added_file");
                        Date date = rs.getDate("date");
                        Date submissionDate = rs.getDate("submission_date");
                        String status = rs.getString("status");

                        model.addRow(new Object[]{id, courseName, assignment, file, date, submissionDate, status});
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to delete assignment.");
                }
                ps.close();
                con.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "SQL Error: " + e.getMessage());
                e.printStackTrace(); // Print stack trace for debugging
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        assignmentidTxt.setEditable(true);
        assignmentidTxt.setText("");
        courseCombo.setSelectedItem("None");
        assignmentTxt.setText("");
        fileTxt.setText("(If any)");
        dateChooser.setDate(null);
        submissiondateChooser.setDate(null);

    }//GEN-LAST:event_resetBtnActionPerformed

    private void filechooseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filechooseBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        f = fileChooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        fileTxt.setText(filename);
    }//GEN-LAST:event_filechooseBtnActionPerformed

    private void assignmentidTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignmentidTxtMouseClicked
        // TODO add your handling code here:
        assignmentidTxt.setText("");
    }//GEN-LAST:event_assignmentidTxtMouseClicked

    private void assignmentidTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignmentidTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignmentidTxtActionPerformed
    public List<String> getCourseNamesByTutorId(int tutorId) {
        List<String> courseNames = new ArrayList<>();

        String courseIdQuery = "SELECT course_id FROM assign_tutor WHERE tutor_id = ?";
        String courseNameQuery = "SELECT course_name FROM course WHERE course_id = ?";

        try {
            // Retrieve course IDs
            Connection con = ProvideConnection.getConnection();
            List<Integer> courseIds = new ArrayList<>();
            try (PreparedStatement courseIdStmt = con.prepareStatement(courseIdQuery)) {
                courseIdStmt.setInt(1, tutorId);
                try (ResultSet courseIdRs = courseIdStmt.executeQuery()) {
                    while (courseIdRs.next()) {
                        courseIds.add(courseIdRs.getInt("course_id"));
                    }
                }
            }

            // Retrieve course names for the obtained course IDs
            try (PreparedStatement courseNameStmt = con.prepareStatement(courseNameQuery)) {
                for (int courseId : courseIds) {
                    courseNameStmt.setInt(1, courseId);
                    try (ResultSet courseNameRs = courseNameStmt.executeQuery()) {
                        if (courseNameRs.next()) {
                            courseNames.add(courseNameRs.getString("course_name"));
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return courseNames;
    }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        List<String> courseNames = getCourseNamesByTutorId(tutor_id);
        for (String courseName : courseNames) {
            courseCombo.addItem(courseName);
        }
        try {
            Connection con = ProvideConnection.getConnection();
            String query = "SELECT * FROM assignment";
            PreparedStatement stmt = con.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            String[] columnIdentifiers = {"Assignment ID", "Course Name", "Assignment", "File", "Date", "Submission Date", "Status"};
            model.setColumnIdentifiers(columnIdentifiers);

            while (rs.next()) {
                int assignmentId = rs.getInt("assignment_id");
                String courseName = rs.getString("course_name");
                String assignment = rs.getString("assignment");
                String file = rs.getString("added_file");
                Date date = rs.getDate("date");
                Date submissionDate = rs.getDate("submission_date");
                String status = rs.getString("status");

                model.addRow(new Object[]{assignmentId, courseName, assignment, file, date, submissionDate, status});
            }

            assignmentTbl.setModel(model);

            rs.close();
            stmt.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formComponentShown

    private void assignmentTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignmentTblMouseClicked
        // TODO add your handling code here:\
        int selectedRow = assignmentTbl.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) assignmentTbl.getModel();

        // Retrieve the data from the selected row
        String assignment_id = model.getValueAt(selectedRow, 0).toString();
        String course_name = model.getValueAt(selectedRow, 1).toString();
        String assignment = model.getValueAt(selectedRow, 2).toString();
        String file = model.getValueAt(selectedRow, 3).toString();
        Date date = (Date) model.getValueAt(selectedRow, 4);
        Date submission_date = (Date) model.getValueAt(selectedRow, 5);
        String status = model.getValueAt(selectedRow, 6).toString();

        // Set the data to the form fields
        assignmentidTxt.setText(assignment_id);
        courseCombo.setSelectedItem(course_name);
        assignmentTxt.setText(assignment);
        fileTxt.setText(file.equals("none") ? "If any" : file);
        dateChooser.setDate(date);
        submissiondateChooser.setDate(submission_date);

        // Make assignment_id field non-editable
        assignmentidTxt.setEditable(false);
    }//GEN-LAST:event_assignmentTblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAssignment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAssignment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAssignment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAssignment.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAssignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable assignmentTbl;
    private javax.swing.JTextArea assignmentTxt;
    private javax.swing.JTextField assignmentidTxt;
    private javax.swing.JLabel cancelBtn;
    private javax.swing.JComboBox<String> courseCombo;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fileTxt;
    private javax.swing.JButton filechooseBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton resetBtn;
    private com.toedter.calendar.JDateChooser submissiondateChooser;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
