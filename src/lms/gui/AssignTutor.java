/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lms.gui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lms.connection.ProvideConnection;

/**
 *
 * @author DELL
 */
public class AssignTutor extends javax.swing.JFrame {

    /**
     * Creates new form AssignTutor
     */
    private boolean updatingCourseIdCombo = false;
    private boolean updatingCourseNameCombo = false;
    private boolean updatingTutorIdCombo = false;
    private boolean updatingTutorNameCombo = false;

    public AssignTutor() {
        initComponents();
        setLocation(560, 60);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        coursenameCombo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tutornameCombo = new javax.swing.JComboBox<>();
        courseidCombo = new javax.swing.JComboBox<>();
        tutoridCombo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignTbl = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        cancelBtn = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setText("Assign Tutor");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(541, 13, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel5.setText("Course Id");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 142, 100, 35));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel6.setText("Course Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 207, 100, 35));

        coursenameCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        coursenameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        coursenameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                coursenameComboItemStateChanged(evt);
            }
        });
        coursenameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursenameComboActionPerformed(evt);
            }
        });
        getContentPane().add(coursenameCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 207, 300, 35));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setText("Tutor");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 80, 100, 35));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel8.setText("Tutor Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 207, 100, 35));

        tutornameCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        tutornameCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        tutornameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tutornameComboItemStateChanged(evt);
            }
        });
        tutornameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutornameComboActionPerformed(evt);
            }
        });
        getContentPane().add(tutornameCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 207, 300, 35));

        courseidCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        courseidCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        courseidCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courseidComboItemStateChanged(evt);
            }
        });
        courseidCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseidComboActionPerformed(evt);
            }
        });
        getContentPane().add(courseidCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 133, 300, 35));

        tutoridCombo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        tutoridCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        tutoridCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tutoridComboItemStateChanged(evt);
            }
        });
        tutoridCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutoridComboActionPerformed(evt);
            }
        });
        getContentPane().add(tutoridCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 133, 300, 35));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel9.setText("Tutor Id");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(495, 142, 100, 35));

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel10.setText("Course");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 80, 100, 35));

        jPanel2.setBackground(new java.awt.Color(56, 69, 173));

        addBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/add.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/updating.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/delete.png"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/reset.png"))); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(956, 72, -1, -1));

        assignTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Tutor ID", "Tutor Name"
            }
        ));
        assignTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(assignTbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 456, 1176, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, 1200, 10));

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/images/cancel.png"))); // NOI18N
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });
        getContentPane().add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1156, 13, -1, -1));

        jPanel1.setBackground(new java.awt.Color(249, 244, 241));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void coursenameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursenameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursenameComboActionPerformed

    private void tutornameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutornameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tutornameComboActionPerformed

    private void courseidComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseidComboActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_courseidComboActionPerformed

    private void tutoridComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutoridComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tutoridComboActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        //        // TODO add your handling code here:
        String selected_courseid = (String) courseidCombo.getSelectedItem();
        String selected_coursename = (String) coursenameCombo.getSelectedItem();
        String selected_tutorid = (String) tutoridCombo.getSelectedItem();
        String selected_tutorname = (String) tutornameCombo.getSelectedItem();

        if (selected_courseid.equals("None")) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Course ID");
        } else if (selected_coursename.equals("None")) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Course Name");
        } else if (selected_tutorid.equals("None")) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Tutor ID");
        } else if (selected_tutorname.equals("None")) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Tutor Name");
        } else {
            try {
                Connection con = ProvideConnection.getConnection();
                String course_query = "INSERT into assign_tutor (course_id, course_name, tutor_id, tutor_name) VALUES (?,?,?,?)";
                PreparedStatement coursestmt = con.prepareStatement(course_query);
                coursestmt.setInt(1, Integer.parseInt(selected_courseid));
                coursestmt.setString(2, selected_coursename);
                coursestmt.setInt(3, Integer.parseInt(selected_tutorid));
                coursestmt.setString(4, selected_tutorname);
                coursestmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Tutor Assigned Successfully.");
                setVisible(false);
                new AssignTutor().setVisible(true);
                coursestmt.close();
                con.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "You must choose a valid Tutor Name");
            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        //        // TODO add your handling code here:

    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        courseidCombo.setSelectedItem("None");
        coursenameCombo.setSelectedItem("None");
        tutoridCombo.setSelectedItem("None");
        tutornameCombo.setSelectedItem("None");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        try {
            Connection con = ProvideConnection.getConnection();
            String course_query = "SELECT course_id, course_name FROM course";
            String tutor_query = "SELECT tutor_id, first_name FROM tutor";

            Statement coursestmt = con.createStatement();
            Statement tutorstmt = con.createStatement();

            ResultSet resultSet1 = coursestmt.executeQuery(course_query);
            ResultSet resultSet2 = tutorstmt.executeQuery(tutor_query);

            while (resultSet1.next()) {
                courseidCombo.addItem("" + resultSet1.getInt("course_id"));
                coursenameCombo.addItem(resultSet1.getString("course_name"));
            }

            while (resultSet2.next()) {
                tutoridCombo.addItem("" + resultSet2.getInt("tutor_id"));
                tutornameCombo.addItem(resultSet2.getString("first_name"));
            }

            String assign_table = "SELECT * FROM assign_tutor";
            DefaultTableModel model = (DefaultTableModel) assignTbl.getModel();
            Statement assign_tablequery = con.createStatement();
            ResultSet resultSet3 = coursestmt.executeQuery(assign_table);
            while (resultSet3.next()) {
                model.addRow(new Object[]{resultSet3.getInt("course_id"), resultSet3.getString("course_name"), resultSet3.getInt("tutor_id"), resultSet3.getString("tutor_name")});

            }
            // Close resources
            resultSet1.close();
            resultSet2.close();
            coursestmt.close();
            tutorstmt.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void courseidComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courseidComboItemStateChanged
        // TODO add your handling code here:
        if (updatingCourseIdCombo) {
            return; // Skip event handling if already updating
        }

        String selected_courseid = (String) courseidCombo.getSelectedItem();
        if ("None".equals(selected_courseid)) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Course ID");
        } else {
            try {
                int int_courseid = Integer.parseInt(selected_courseid);
                String selected_coursename = null;
                Connection con = ProvideConnection.getConnection();
                String course_query = "SELECT course_name FROM course WHERE course_id = ?";
                PreparedStatement coursestmt = con.prepareStatement(course_query);
                coursestmt.setInt(1, int_courseid);
                ResultSet resultSet1 = coursestmt.executeQuery();
                if (resultSet1.next()) {
                    selected_coursename = resultSet1.getString("course_name");
                }
                resultSet1.close();
                coursestmt.close();
                con.close();

                // Update coursenameCombo without triggering the event
                updatingCourseNameCombo = true;
                coursenameCombo.setSelectedItem(selected_coursename);
                updatingCourseNameCombo = false;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_courseidComboItemStateChanged

    private void coursenameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_coursenameComboItemStateChanged
        // TODO add your handling code here:
        if (updatingCourseNameCombo) {
            return; // Skip event handling if already updating
        }

        String selected_coursename = (String) coursenameCombo.getSelectedItem();
        if ("None".equals(selected_coursename)) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Course Name");
        } else {
            try {
                String selected_courseid = null;
                Connection con = ProvideConnection.getConnection();
                String course_query = "SELECT course_id FROM course WHERE course_name = ?";
                PreparedStatement coursestmt = con.prepareStatement(course_query);
                coursestmt.setString(1, selected_coursename);
                ResultSet resultSet1 = coursestmt.executeQuery();
                if (resultSet1.next()) {
                    selected_courseid = String.valueOf(resultSet1.getInt("course_id"));
                }
                resultSet1.close();
                coursestmt.close();
                con.close();

                // Update courseidCombo without triggering the event
                updatingCourseIdCombo = true;
                courseidCombo.setSelectedItem(selected_courseid);
                updatingCourseIdCombo = false;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_coursenameComboItemStateChanged

    private void tutoridComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tutoridComboItemStateChanged
        // TODO add your handling code here:
        if (updatingTutorIdCombo) {
            return; // Skip event handling if already updating
        }

        String selected_tutorid = (String) tutoridCombo.getSelectedItem();
        if ("None".equals(selected_tutorid)) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Tutor ID");
        } else {
            try {
                int int_tutorid = Integer.parseInt(selected_tutorid);
                String selected_tutorname = null;
                Connection con = ProvideConnection.getConnection();
                String tutor_query = "SELECT first_name FROM tutor WHERE tutor_id = ?";
                PreparedStatement tutorstmt = con.prepareStatement(tutor_query);
                tutorstmt.setInt(1, int_tutorid);
                ResultSet resultSet = tutorstmt.executeQuery();
                if (resultSet.next()) {
                    selected_tutorname = resultSet.getString("first_name");
                }
                resultSet.close();
                tutorstmt.close();
                con.close();

                // Update tutornameCombo without triggering the event
                updatingTutorNameCombo = true;
                tutornameCombo.setSelectedItem(selected_tutorname);
                updatingTutorNameCombo = false;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }

    }//GEN-LAST:event_tutoridComboItemStateChanged

    private void tutornameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tutornameComboItemStateChanged
        // TODO add your handling code here:
        if (updatingTutorNameCombo) {
            return; // Skip event handling if already updating
        }

        String selected_tutorname = (String) tutornameCombo.getSelectedItem();
        if ("None".equals(selected_tutorname)) {
            JOptionPane.showMessageDialog(null, "You must choose a valid Tutor Name");
        } else {
            try {
                String selected_tutorid = null;
                Connection con = ProvideConnection.getConnection();
                String tutor_query = "SELECT tutor_id FROM tutor WHERE first_name = ?";
                PreparedStatement tutorstmt = con.prepareStatement(tutor_query);
                tutorstmt.setString(1, selected_tutorname);
                ResultSet resultSet = tutorstmt.executeQuery();
                if (resultSet.next()) {
                    selected_tutorid = ""+resultSet.getInt("tutor_id");
                }
                resultSet.close();
                tutorstmt.close();
                con.close();

                // Update tutornameCombo without triggering the event
                updatingTutorIdCombo = true;
                tutoridCombo.setSelectedItem(selected_tutorid);
                updatingTutorIdCombo = false;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_tutornameComboItemStateChanged

    private void assignTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTblMouseClicked
        // TODO add your handling code here:
         int index = assignTbl.getSelectedRow();
        TableModel model = assignTbl.getModel();
        String selectedcourseid = model.getValueAt(index, 0).toString();
        String selectedtutorid = model.getValueAt(index, 2).toString();
        String selectedcoursename = model.getValueAt(index, 1).toString();
        String selectedtutorname = model.getValueAt(index, 3).toString();
        courseidCombo.setSelectedItem(selectedcourseid);
        coursenameCombo.setSelectedItem(selectedcoursename);
        tutoridCombo.setSelectedItem(selectedtutorid);
        tutornameCombo.setSelectedItem(selectedtutorname);
    }//GEN-LAST:event_assignTblMouseClicked

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_cancelBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignTutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignTutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignTutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignTutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignTutor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable assignTbl;
    private javax.swing.JLabel cancelBtn;
    private javax.swing.JComboBox<String> courseidCombo;
    private javax.swing.JComboBox<String> coursenameCombo;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton resetBtn;
    private javax.swing.JComboBox<String> tutoridCombo;
    private javax.swing.JComboBox<String> tutornameCombo;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
